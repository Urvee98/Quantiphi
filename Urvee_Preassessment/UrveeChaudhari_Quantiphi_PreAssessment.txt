Name: Urvee Chaudhari


AWS
1. 
1. In my account/console, select security credentials
2. In Policies, select create policy
3. Select create your own policy
4. Give Policy name, description
5. {
    "Version": "2020-01-20",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
                        "s3:GetBucketLocation",
                        "s3:ListAllMyBuckets"
                      ],
            "Resource": "arn:aws:s3:::*"
        },
        {
            "Effect": "Allow",
            "Action": "s3:*",
            "Resource": [
                "arn:aws:s3:::UrveeBUCKET",
                "arn:aws:s3:::UrveeBUCKET/*"
            ]
        }
    ]
}
6. Create new group, give group name
7. Search for the policy we created
8. Click on review and then create group
2. 
For an action of EC2 instance, usage of any resource will be allowed and for any other action, it (usage) will be denied
3.
 To launch an EC2 instance:
1. Go to AWS Management Console
2. Click on create instance
3. Select the AMI (OS) required
4. Select the type of instance (for example: free tier: t2.micro)
5. Specify number of instances required
6. Specify the storage (30 GB by default)
7. Add a tag (key and value)
8. Configure Security Settings
9. Generate a new key pair
10. Click on Review and Launch
11. Then launch
4. 
1. Create a S3 bucket with the same name as the domain (to route the requests to S3)
2. Go to S3 in AWS Console
3. Click on the bucket name
4. Go in Properties
5. Select “Static Website Hosting”
6. Select “Use this bucket to host a website”
7. Enter a .html index document
To make it public:
8. Go to the bucket
9. Click on Permissions
10. Edit Public Access Settings
11. Change “Block new public bucket policies”, “Block public and cross-account access if bucket has public policies”, and “Block new public ACLs and uploading public objects” to be false and Save.
12. In Permissions, select Bucket Policy
13. Add the required bucket policy and then Save
14. To upload GUI files, click on your bucket
15. Click on Upload
16. Select add file and add the entire static website directory
17. Click on Next
18. Leave the default settings for Set Properties
19. Click on Next and then Upload
5. 
1. In AWS Management Console, select Your VPC
2. Click on Create VPC
3. Enter name tag and IPv4 CIDR Block (say 10.0.0.0/16)
4. Click on Create
To create public subnet
5. Go to Create subnet
6. Select the VPC create
7. Enter the IPv4 CIDR Block (say 10.0.1.0/24) and name tag as PublicNet, and then click on create
                        To create a private subnet
8. Select create subnet 
9. Enter the name as PrivateNet
10. Give the IPv4 CIDR block (say 10.0.2.0/24)
11. Create and attach an Internet Gateway (Attach to the VPC we created)
12. Create a new Route Table to establish a route between public subnet and the internet
13. Keep destination as 0.0.0.0
14. Click on Save




GCP
1.
1. Go to VPC Network page
2. Click on Create VPC Network
3. Enter name for the network
4. Choose Custom for Subnet creation mode
5. Enter name, regon, IP address range for the subnet and click on Done
6. Choose the dynamic routing mode for the VPC network
7. Click on Create


2.
        To create a service account 
1. Open Service Account page
2. Click Select a project, choose the project, and click Open.
3. Click Create Service Account.
4. Enter a service account name, description, select a role you wish to grant to the service account, and then click Save.
5. Go to roles page
6. Select the organization
7. Create role
8. Enter title, name, description, etc
9. In add permissions, select the  GCE and GCS Services and save


        To grant roles to the account
10. Open the IAM & Admin Page
11. Click on select a project, choose the project and click Open
12. Identify the service account to which we want to add roles, click on edit
13. Select the roles (GCE & GCS)
14. Click on Save to apply those roles to the account
3. 
        To create a bucket
1. Open Cloud Storage
2. Click on Create Bucket
3. Enter the bucket information like unique name, choose standard for storage class and location
4. Chose set object level and bucket level permissions
5. Click on create
To copy all my local files to the buckets (GCS)
6. Gsutil cp *.txt gs://my-bucket
4.
1. Select Compute Engine
2. Go to VM instance and click on create
3. Enter the name for the instance, region
4. In machine type, we can customize the power, CPU cores we require
5. Then choose a boot disk
6. Set service account under th proper access
7. In firewall, go to Security tab to get the SSH key
8. To deploy nginx, go to nqinx page
9. Select the project name
10. In Configure and Deploy window, enter appropriate values for zone, machine type.
11. Click on Deploy
12. Click the Create button. The Google Developers Console confirms that NGINX Plus was deployed.






Linux
1.  tr ‘’ ‘\n’ < FILE | grep WORD | wc -l
Where tr replaces spaces with newlines, grep filters all resulting lines matching WORD
2. find . -type f -name "*.txt"
This will list all files with the extension .txt. The . at the start denotes the current directory. find searches recursively in all the directories below the given path. 
3.  for d in ./*/ ;
do 
result=${d##*/}
if [“$result” == “aws%” ]
then        
pwd "$d"
fi
done
     4.         
sed -i 's/original/new/g' file.txt
Sed: stream editor
-i: in place
Original: the word/ expression to replace
New: the new expression/ word
File.txt: the file name
5.
                 find . -name file.txt
This command finds a file called file.txt in current and sub-directories